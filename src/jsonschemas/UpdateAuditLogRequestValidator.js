/* eslint-disable */
"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/UpdateAuditLogRequest","definitions":{"UpdateAuditLogRequest":{"$ref":"#/definitions/PutAuditLogRequestBody"},"PutAuditLogRequestBody":{"$ref":"#/definitions/AuditLogDto"},"AuditLogDto":{"type":"object","properties":{"id":{"type":"string"},"entityId":{"type":"string"},"entityType":{"$ref":"#/definitions/AuditLogEntityType"},"organizationId":{"type":"string"},"deployed":{"type":"boolean"},"startTime":{"type":"string","format":"date-time"},"endTime":{"type":"string","format":"date-time"},"source":{"type":"string"},"type":{"$ref":"#/definitions/AuditLogEventType"},"details":{"$ref":"#/definitions/AuditLogDetails"},"steps":{"type":"array","items":{"$ref":"#/definitions/StepDetail"}},"agentId":{"type":"string"}},"required":["entityId","entityType","deployed","startTime"],"additionalProperties":false},"AuditLogEntityType":{"type":"number","enum":[0,1,2,3,4]},"AuditLogEventType":{"type":"number","const":0},"AuditLogDetails":{"type":"object","properties":{"type":{"$ref":"#/definitions/AuditLogEventType"},"endTime":{"type":"string","format":"date-time"}},"required":["type"],"additionalProperties":false},"StepDetail":{"type":"object","properties":{"name":{"type":"string"},"id":{"type":"string"},"pluginId":{"type":"string"},"datasourceId":{"type":"string"},"error":{"type":"string"},"startTimeUtc":{"type":"string","format":"date-time"},"executionTimeMs":{"type":"number"}},"required":["name","id","pluginId","datasourceId"],"additionalProperties":false}}};const schema12 = {"type":"object","properties":{"id":{"type":"string"},"entityId":{"type":"string"},"entityType":{"$ref":"#/definitions/AuditLogEntityType"},"organizationId":{"type":"string"},"deployed":{"type":"boolean"},"startTime":{"type":"string","format":"date-time"},"endTime":{"type":"string","format":"date-time"},"source":{"type":"string"},"type":{"$ref":"#/definitions/AuditLogEventType"},"details":{"$ref":"#/definitions/AuditLogDetails"},"steps":{"type":"array","items":{"$ref":"#/definitions/StepDetail"}},"agentId":{"type":"string"}},"required":["entityId","entityType","deployed","startTime"],"additionalProperties":false};const schema13 = {"type":"number","enum":[0,1,2,3,4]};const schema14 = {"type":"number","const":0};const schema17 = {"type":"object","properties":{"name":{"type":"string"},"id":{"type":"string"},"pluginId":{"type":"string"},"datasourceId":{"type":"string"},"error":{"type":"string"},"startTimeUtc":{"type":"string","format":"date-time"},"executionTimeMs":{"type":"number"}},"required":["name","id","pluginId","datasourceId"],"additionalProperties":false};const func2 = Object.prototype.hasOwnProperty;const formats0 = require("ajv-formats/dist/formats").fullFormats["date-time"];const schema15 = {"type":"object","properties":{"type":{"$ref":"#/definitions/AuditLogEventType"},"endTime":{"type":"string","format":"date-time"}},"required":["type"],"additionalProperties":false};function validate12(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.type === undefined) && (missing0 = "type")){validate12.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!((key0 === "type") || (key0 === "endTime"))){validate12.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.type !== undefined){let data0 = data.type;const _errs2 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "boolean" || data0 === null
              || (dataType0 == "string" && data0 && data0 == +data0)){coerced0 = +data0;}else {validate12.errors = [{instancePath:instancePath+"/type",schemaPath:"#/definitions/AuditLogEventType/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["type"] = coerced0;}}}if(0 !== data0){validate12.errors = [{instancePath:instancePath+"/type",schemaPath:"#/definitions/AuditLogEventType/const",keyword:"const",params:{allowedValue: 0},message:"must be equal to constant"}];return false;}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.endTime !== undefined){let data1 = data.endTime;const _errs5 = errors;if(typeof data1 !== "string"){let dataType1 = typeof data1;let coerced1 = undefined;if(!(coerced1 !== undefined)){if(dataType1 == "number" || dataType1 == "boolean"){coerced1 = "" + data1;}else if(data1 === null){coerced1 = "";}else {validate12.errors = [{instancePath:instancePath+"/endTime",schemaPath:"#/properties/endTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced1 !== undefined){data1 = coerced1;if(data !== undefined){data["endTime"] = coerced1;}}}if(errors === _errs5){if(errors === _errs5){if(typeof data1 === "string"){if(!(formats0.validate(data1))){validate12.errors = [{instancePath:instancePath+"/endTime",schemaPath:"#/properties/endTime/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}}}var valid0 = _errs5 === errors;}else {var valid0 = true;}}}}}else {validate12.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate12.errors = vErrors;return errors === 0;}function validate11(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(errors === 0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if(((((data.entityId === undefined) && (missing0 = "entityId")) || ((data.entityType === undefined) && (missing0 = "entityType"))) || ((data.deployed === undefined) && (missing0 = "deployed"))) || ((data.startTime === undefined) && (missing0 = "startTime"))){validate11.errors = [{instancePath,schemaPath:"#/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs1 = errors;for(const key0 in data){if(!(func2.call(schema12.properties, key0))){validate11.errors = [{instancePath,schemaPath:"#/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs1 === errors){if(data.id !== undefined){let data0 = data.id;const _errs2 = errors;if(typeof data0 !== "string"){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "number" || dataType0 == "boolean"){coerced0 = "" + data0;}else if(data0 === null){coerced0 = "";}else {validate11.errors = [{instancePath:instancePath+"/id",schemaPath:"#/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["id"] = coerced0;}}}var valid0 = _errs2 === errors;}else {var valid0 = true;}if(valid0){if(data.entityId !== undefined){let data1 = data.entityId;const _errs4 = errors;if(typeof data1 !== "string"){let dataType1 = typeof data1;let coerced1 = undefined;if(!(coerced1 !== undefined)){if(dataType1 == "number" || dataType1 == "boolean"){coerced1 = "" + data1;}else if(data1 === null){coerced1 = "";}else {validate11.errors = [{instancePath:instancePath+"/entityId",schemaPath:"#/properties/entityId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced1 !== undefined){data1 = coerced1;if(data !== undefined){data["entityId"] = coerced1;}}}var valid0 = _errs4 === errors;}else {var valid0 = true;}if(valid0){if(data.entityType !== undefined){let data2 = data.entityType;const _errs6 = errors;if(!((typeof data2 == "number") && (isFinite(data2)))){let dataType2 = typeof data2;let coerced2 = undefined;if(!(coerced2 !== undefined)){if(dataType2 == "boolean" || data2 === null
              || (dataType2 == "string" && data2 && data2 == +data2)){coerced2 = +data2;}else {validate11.errors = [{instancePath:instancePath+"/entityType",schemaPath:"#/definitions/AuditLogEntityType/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced2 !== undefined){data2 = coerced2;if(data !== undefined){data["entityType"] = coerced2;}}}if(!(((((data2 === 0) || (data2 === 1)) || (data2 === 2)) || (data2 === 3)) || (data2 === 4))){validate11.errors = [{instancePath:instancePath+"/entityType",schemaPath:"#/definitions/AuditLogEntityType/enum",keyword:"enum",params:{allowedValues: schema13.enum},message:"must be equal to one of the allowed values"}];return false;}var valid0 = _errs6 === errors;}else {var valid0 = true;}if(valid0){if(data.organizationId !== undefined){let data3 = data.organizationId;const _errs9 = errors;if(typeof data3 !== "string"){let dataType3 = typeof data3;let coerced3 = undefined;if(!(coerced3 !== undefined)){if(dataType3 == "number" || dataType3 == "boolean"){coerced3 = "" + data3;}else if(data3 === null){coerced3 = "";}else {validate11.errors = [{instancePath:instancePath+"/organizationId",schemaPath:"#/properties/organizationId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced3 !== undefined){data3 = coerced3;if(data !== undefined){data["organizationId"] = coerced3;}}}var valid0 = _errs9 === errors;}else {var valid0 = true;}if(valid0){if(data.deployed !== undefined){let data4 = data.deployed;const _errs11 = errors;if(typeof data4 !== "boolean"){let coerced4 = undefined;if(!(coerced4 !== undefined)){if(data4 === "false" || data4 === 0 || data4 === null){coerced4 = false;}else if(data4 === "true" || data4 === 1){coerced4 = true;}else {validate11.errors = [{instancePath:instancePath+"/deployed",schemaPath:"#/properties/deployed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}if(coerced4 !== undefined){data4 = coerced4;if(data !== undefined){data["deployed"] = coerced4;}}}var valid0 = _errs11 === errors;}else {var valid0 = true;}if(valid0){if(data.startTime !== undefined){let data5 = data.startTime;const _errs13 = errors;if(typeof data5 !== "string"){let dataType5 = typeof data5;let coerced5 = undefined;if(!(coerced5 !== undefined)){if(dataType5 == "number" || dataType5 == "boolean"){coerced5 = "" + data5;}else if(data5 === null){coerced5 = "";}else {validate11.errors = [{instancePath:instancePath+"/startTime",schemaPath:"#/properties/startTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced5 !== undefined){data5 = coerced5;if(data !== undefined){data["startTime"] = coerced5;}}}if(errors === _errs13){if(errors === _errs13){if(typeof data5 === "string"){if(!(formats0.validate(data5))){validate11.errors = [{instancePath:instancePath+"/startTime",schemaPath:"#/properties/startTime/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}}}var valid0 = _errs13 === errors;}else {var valid0 = true;}if(valid0){if(data.endTime !== undefined){let data6 = data.endTime;const _errs15 = errors;if(typeof data6 !== "string"){let dataType6 = typeof data6;let coerced6 = undefined;if(!(coerced6 !== undefined)){if(dataType6 == "number" || dataType6 == "boolean"){coerced6 = "" + data6;}else if(data6 === null){coerced6 = "";}else {validate11.errors = [{instancePath:instancePath+"/endTime",schemaPath:"#/properties/endTime/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced6 !== undefined){data6 = coerced6;if(data !== undefined){data["endTime"] = coerced6;}}}if(errors === _errs15){if(errors === _errs15){if(typeof data6 === "string"){if(!(formats0.validate(data6))){validate11.errors = [{instancePath:instancePath+"/endTime",schemaPath:"#/properties/endTime/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}}}var valid0 = _errs15 === errors;}else {var valid0 = true;}if(valid0){if(data.source !== undefined){let data7 = data.source;const _errs17 = errors;if(typeof data7 !== "string"){let dataType7 = typeof data7;let coerced7 = undefined;if(!(coerced7 !== undefined)){if(dataType7 == "number" || dataType7 == "boolean"){coerced7 = "" + data7;}else if(data7 === null){coerced7 = "";}else {validate11.errors = [{instancePath:instancePath+"/source",schemaPath:"#/properties/source/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced7 !== undefined){data7 = coerced7;if(data !== undefined){data["source"] = coerced7;}}}var valid0 = _errs17 === errors;}else {var valid0 = true;}if(valid0){if(data.type !== undefined){let data8 = data.type;const _errs19 = errors;if(!((typeof data8 == "number") && (isFinite(data8)))){let dataType8 = typeof data8;let coerced8 = undefined;if(!(coerced8 !== undefined)){if(dataType8 == "boolean" || data8 === null
              || (dataType8 == "string" && data8 && data8 == +data8)){coerced8 = +data8;}else {validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/definitions/AuditLogEventType/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced8 !== undefined){data8 = coerced8;if(data !== undefined){data["type"] = coerced8;}}}if(0 !== data8){validate11.errors = [{instancePath:instancePath+"/type",schemaPath:"#/definitions/AuditLogEventType/const",keyword:"const",params:{allowedValue: 0},message:"must be equal to constant"}];return false;}var valid0 = _errs19 === errors;}else {var valid0 = true;}if(valid0){if(data.details !== undefined){const _errs22 = errors;if(!(validate12(data.details, {instancePath:instancePath+"/details",parentData:data,parentDataProperty:"details",rootData}))){vErrors = vErrors === null ? validate12.errors : vErrors.concat(validate12.errors);errors = vErrors.length;}var valid0 = _errs22 === errors;}else {var valid0 = true;}if(valid0){if(data.steps !== undefined){let data10 = data.steps;const _errs23 = errors;if(errors === _errs23){if(Array.isArray(data10)){var valid3 = true;const len0 = data10.length;for(let i0=0; i0<len0; i0++){let data11 = data10[i0];const _errs25 = errors;const _errs26 = errors;if(errors === _errs26){if(data11 && typeof data11 == "object" && !Array.isArray(data11)){let missing1;if(((((data11.name === undefined) && (missing1 = "name")) || ((data11.id === undefined) && (missing1 = "id"))) || ((data11.pluginId === undefined) && (missing1 = "pluginId"))) || ((data11.datasourceId === undefined) && (missing1 = "datasourceId"))){validate11.errors = [{instancePath:instancePath+"/steps/" + i0,schemaPath:"#/definitions/StepDetail/required",keyword:"required",params:{missingProperty: missing1},message:"must have required property '"+missing1+"'"}];return false;}else {const _errs28 = errors;for(const key1 in data11){if(!(((((((key1 === "name") || (key1 === "id")) || (key1 === "pluginId")) || (key1 === "datasourceId")) || (key1 === "error")) || (key1 === "startTimeUtc")) || (key1 === "executionTimeMs"))){validate11.errors = [{instancePath:instancePath+"/steps/" + i0,schemaPath:"#/definitions/StepDetail/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key1},message:"must NOT have additional properties"}];return false;break;}}if(_errs28 === errors){if(data11.name !== undefined){let data12 = data11.name;const _errs29 = errors;if(typeof data12 !== "string"){let dataType9 = typeof data12;let coerced9 = undefined;if(!(coerced9 !== undefined)){if(dataType9 == "number" || dataType9 == "boolean"){coerced9 = "" + data12;}else if(data12 === null){coerced9 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/name",schemaPath:"#/definitions/StepDetail/properties/name/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced9 !== undefined){data12 = coerced9;if(data11 !== undefined){data11["name"] = coerced9;}}}var valid5 = _errs29 === errors;}else {var valid5 = true;}if(valid5){if(data11.id !== undefined){let data13 = data11.id;const _errs31 = errors;if(typeof data13 !== "string"){let dataType10 = typeof data13;let coerced10 = undefined;if(!(coerced10 !== undefined)){if(dataType10 == "number" || dataType10 == "boolean"){coerced10 = "" + data13;}else if(data13 === null){coerced10 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/id",schemaPath:"#/definitions/StepDetail/properties/id/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced10 !== undefined){data13 = coerced10;if(data11 !== undefined){data11["id"] = coerced10;}}}var valid5 = _errs31 === errors;}else {var valid5 = true;}if(valid5){if(data11.pluginId !== undefined){let data14 = data11.pluginId;const _errs33 = errors;if(typeof data14 !== "string"){let dataType11 = typeof data14;let coerced11 = undefined;if(!(coerced11 !== undefined)){if(dataType11 == "number" || dataType11 == "boolean"){coerced11 = "" + data14;}else if(data14 === null){coerced11 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/pluginId",schemaPath:"#/definitions/StepDetail/properties/pluginId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced11 !== undefined){data14 = coerced11;if(data11 !== undefined){data11["pluginId"] = coerced11;}}}var valid5 = _errs33 === errors;}else {var valid5 = true;}if(valid5){if(data11.datasourceId !== undefined){let data15 = data11.datasourceId;const _errs35 = errors;if(typeof data15 !== "string"){let dataType12 = typeof data15;let coerced12 = undefined;if(!(coerced12 !== undefined)){if(dataType12 == "number" || dataType12 == "boolean"){coerced12 = "" + data15;}else if(data15 === null){coerced12 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/datasourceId",schemaPath:"#/definitions/StepDetail/properties/datasourceId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced12 !== undefined){data15 = coerced12;if(data11 !== undefined){data11["datasourceId"] = coerced12;}}}var valid5 = _errs35 === errors;}else {var valid5 = true;}if(valid5){if(data11.error !== undefined){let data16 = data11.error;const _errs37 = errors;if(typeof data16 !== "string"){let dataType13 = typeof data16;let coerced13 = undefined;if(!(coerced13 !== undefined)){if(dataType13 == "number" || dataType13 == "boolean"){coerced13 = "" + data16;}else if(data16 === null){coerced13 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/error",schemaPath:"#/definitions/StepDetail/properties/error/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced13 !== undefined){data16 = coerced13;if(data11 !== undefined){data11["error"] = coerced13;}}}var valid5 = _errs37 === errors;}else {var valid5 = true;}if(valid5){if(data11.startTimeUtc !== undefined){let data17 = data11.startTimeUtc;const _errs39 = errors;if(typeof data17 !== "string"){let dataType14 = typeof data17;let coerced14 = undefined;if(!(coerced14 !== undefined)){if(dataType14 == "number" || dataType14 == "boolean"){coerced14 = "" + data17;}else if(data17 === null){coerced14 = "";}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/startTimeUtc",schemaPath:"#/definitions/StepDetail/properties/startTimeUtc/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced14 !== undefined){data17 = coerced14;if(data11 !== undefined){data11["startTimeUtc"] = coerced14;}}}if(errors === _errs39){if(errors === _errs39){if(typeof data17 === "string"){if(!(formats0.validate(data17))){validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/startTimeUtc",schemaPath:"#/definitions/StepDetail/properties/startTimeUtc/format",keyword:"format",params:{format: "date-time"},message:"must match format \""+"date-time"+"\""}];return false;}}}}var valid5 = _errs39 === errors;}else {var valid5 = true;}if(valid5){if(data11.executionTimeMs !== undefined){let data18 = data11.executionTimeMs;const _errs41 = errors;if(!((typeof data18 == "number") && (isFinite(data18)))){let dataType15 = typeof data18;let coerced15 = undefined;if(!(coerced15 !== undefined)){if(dataType15 == "boolean" || data18 === null
              || (dataType15 == "string" && data18 && data18 == +data18)){coerced15 = +data18;}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0+"/executionTimeMs",schemaPath:"#/definitions/StepDetail/properties/executionTimeMs/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced15 !== undefined){data18 = coerced15;if(data11 !== undefined){data11["executionTimeMs"] = coerced15;}}}var valid5 = _errs41 === errors;}else {var valid5 = true;}}}}}}}}}}else {validate11.errors = [{instancePath:instancePath+"/steps/" + i0,schemaPath:"#/definitions/StepDetail/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}var valid3 = _errs25 === errors;if(!valid3){break;}}}else {validate11.errors = [{instancePath:instancePath+"/steps",schemaPath:"#/properties/steps/type",keyword:"type",params:{type: "array"},message:"must be array"}];return false;}}var valid0 = _errs23 === errors;}else {var valid0 = true;}if(valid0){if(data.agentId !== undefined){let data19 = data.agentId;const _errs43 = errors;if(typeof data19 !== "string"){let dataType16 = typeof data19;let coerced16 = undefined;if(!(coerced16 !== undefined)){if(dataType16 == "number" || dataType16 == "boolean"){coerced16 = "" + data19;}else if(data19 === null){coerced16 = "";}else {validate11.errors = [{instancePath:instancePath+"/agentId",schemaPath:"#/properties/agentId/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced16 !== undefined){data19 = coerced16;if(data !== undefined){data["agentId"] = coerced16;}}}var valid0 = _errs43 === errors;}else {var valid0 = true;}}}}}}}}}}}}}}}else {validate11.errors = [{instancePath,schemaPath:"#/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate11.errors = vErrors;return errors === 0;}function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;if(!(validate11(data, {instancePath,parentData,parentDataProperty,rootData}))){vErrors = vErrors === null ? validate11.errors : vErrors.concat(validate11.errors);errors = vErrors.length;}validate10.errors = vErrors;return errors === 0;}
/* eslint-disable */
"use strict";export const validate = validate10;export default validate10;const schema11 = {"$schema":"http://json-schema.org/draft-07/schema#","$ref":"#/definitions/ResetFromVersion","definitions":{"ResetFromVersion":{"type":"object","properties":{"fromVersion":{"type":"number"},"isDeployed":{"type":"boolean"},"description":{"type":"string"}},"required":["fromVersion"],"additionalProperties":false}}};const schema12 = {"type":"object","properties":{"fromVersion":{"type":"number"},"isDeployed":{"type":"boolean"},"description":{"type":"string"}},"required":["fromVersion"],"additionalProperties":false};function validate10(data, {instancePath="", parentData, parentDataProperty, rootData=data}={}){let vErrors = null;let errors = 0;const _errs0 = errors;if(errors === _errs0){if(data && typeof data == "object" && !Array.isArray(data)){let missing0;if((data.fromVersion === undefined) && (missing0 = "fromVersion")){validate10.errors = [{instancePath,schemaPath:"#/definitions/ResetFromVersion/required",keyword:"required",params:{missingProperty: missing0},message:"must have required property '"+missing0+"'"}];return false;}else {const _errs2 = errors;for(const key0 in data){if(!(((key0 === "fromVersion") || (key0 === "isDeployed")) || (key0 === "description"))){validate10.errors = [{instancePath,schemaPath:"#/definitions/ResetFromVersion/additionalProperties",keyword:"additionalProperties",params:{additionalProperty: key0},message:"must NOT have additional properties"}];return false;break;}}if(_errs2 === errors){if(data.fromVersion !== undefined){let data0 = data.fromVersion;const _errs3 = errors;if(!((typeof data0 == "number") && (isFinite(data0)))){let dataType0 = typeof data0;let coerced0 = undefined;if(!(coerced0 !== undefined)){if(dataType0 == "boolean" || data0 === null
              || (dataType0 == "string" && data0 && data0 == +data0)){coerced0 = +data0;}else {validate10.errors = [{instancePath:instancePath+"/fromVersion",schemaPath:"#/definitions/ResetFromVersion/properties/fromVersion/type",keyword:"type",params:{type: "number"},message:"must be number"}];return false;}}if(coerced0 !== undefined){data0 = coerced0;if(data !== undefined){data["fromVersion"] = coerced0;}}}var valid1 = _errs3 === errors;}else {var valid1 = true;}if(valid1){if(data.isDeployed !== undefined){let data1 = data.isDeployed;const _errs5 = errors;if(typeof data1 !== "boolean"){let coerced1 = undefined;if(!(coerced1 !== undefined)){if(data1 === "false" || data1 === 0 || data1 === null){coerced1 = false;}else if(data1 === "true" || data1 === 1){coerced1 = true;}else {validate10.errors = [{instancePath:instancePath+"/isDeployed",schemaPath:"#/definitions/ResetFromVersion/properties/isDeployed/type",keyword:"type",params:{type: "boolean"},message:"must be boolean"}];return false;}}if(coerced1 !== undefined){data1 = coerced1;if(data !== undefined){data["isDeployed"] = coerced1;}}}var valid1 = _errs5 === errors;}else {var valid1 = true;}if(valid1){if(data.description !== undefined){let data2 = data.description;const _errs7 = errors;if(typeof data2 !== "string"){let dataType2 = typeof data2;let coerced2 = undefined;if(!(coerced2 !== undefined)){if(dataType2 == "number" || dataType2 == "boolean"){coerced2 = "" + data2;}else if(data2 === null){coerced2 = "";}else {validate10.errors = [{instancePath:instancePath+"/description",schemaPath:"#/definitions/ResetFromVersion/properties/description/type",keyword:"type",params:{type: "string"},message:"must be string"}];return false;}}if(coerced2 !== undefined){data2 = coerced2;if(data !== undefined){data["description"] = coerced2;}}}var valid1 = _errs7 === errors;}else {var valid1 = true;}}}}}}else {validate10.errors = [{instancePath,schemaPath:"#/definitions/ResetFromVersion/type",keyword:"type",params:{type: "object"},message:"must be object"}];return false;}}validate10.errors = vErrors;return errors === 0;}